<?php
//****************************************************************************************
//Generated by Cobalt, a rapid application development framework. http://cobalt.jvroig.com
//Cobalt developed by JV Roig (jvroig@jvroig.com)
//****************************************************************************************
require 'path.php';
init_cobalt('Edit required appointment');
init_var($filter_field_used);
init_var($filter_used);
init_var($page_from);
init_var($filter_sort_asc);
init_var($filter_sort_desc);

if(isset($_GET['required_appointment_id']))
{
    $required_appointment_id = urldecode($_GET['required_appointment_id']);
    require 'form_data_required_appointment.php';

}

if(xsrf_guard())
{
    init_var($_POST['btn_cancel']);
    init_var($_POST['btn_submit']);
    require 'components/query_string_standard.php';
    require 'subclasses/required_appointment.php';
    $dbh_required_appointment = new required_appointment;

    $object_name = 'dbh_required_appointment';
    require 'components/create_form_data.php';

    extract($arr_form_data);

    if($_POST['btn_cancel'])
    {
        log_action('Pressed cancel button');
        redirect("listview_required_appointment.php?$query_string");
    }

    if($_POST)
    {

    $dbh = cobalt_load_class('refstudent');
   
    $result = $dbh->execute_query("SELECT student_first_name, student_middle_name, student_last_name FROM refstudent WHERE student_id ='".$_POST['student_id']."'")->result;
       
   $row = $result->fetch_assoc();
   

   $student_name = $row['student_first_name'].' '.$row['student_middle_name'].' '.$row['student_last_name'];

    $arr_form_data['time_start'] = $_POST['time_start'].':'.$_POST['minutes'].' '.$_POST['ampm'];
    $arr_form_data['time_end'] = $_POST['time_end'].':'.$_POST['minutes2'].' '.$_POST['am_pm'];
    //debug($arr_form_data['minutes']);
    //debug($arr_form_data['minutes2']);
    debug($arr_form_data['status']);
    }

    if($_POST['btn_submit'])
    {
        log_action('Pressed submit button');

        $message .= $dbh_required_appointment->sanitize($arr_form_data)->lst_error;
        extract($arr_form_data);

        if($dbh_required_appointment->check_uniqueness_for_editing($arr_form_data)->is_unique)
        {
            //Good, no duplicate in database
        }
        else
        {
            $message = "Record already exists with the same primary identifiers!";
        }

        if($message=="")
        {

            $dbh_required_appointment->edit($arr_form_data);
          
            if($_POST['status'] == 'Completed')
            {
                $dbh = cobalt_load_class('refstudentclearance');
                $dbh->set_fields('id');
                $dbh->set_where('student_id ="'.$_POST['student_id'].'" AND dept_id = 54 AND is_clear= "NO" ');
                $dbh->set_order('date DESC');
                // debug($dbh);
                $dbh->exec_fetch('single');
                $clearance_id = $dbh->dump;
                $param = array();

                $param['is_clear'] = "YES";
                $param['id'] = $clearance_id;
                
                $dbh->edit_clearance($param);
            }

            redirect("listview_required_appointment.php?$query_string");
        }
    }
}
require 'subclasses/required_appointment_html.php';
$html = new required_appointment_html;
$html->draw_header('Edit %%', $message, $message_type);
$html->draw_listview_referrer_info($filter_field_used, $filter_used, $page_from, $filter_sort_asc, $filter_sort_desc);
init_var($student_name);
$html->fields['student_id']['companion'] = '<input type="text" name="student_name" placeholder="Patient Name" value="'.$student_name.'" disabled>';
$html->draw_hidden('required_appointment_id');

$html->draw_controls('edit');

$html->draw_footer();